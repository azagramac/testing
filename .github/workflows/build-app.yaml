name: 🚀 Android Build & Release

on:
  push:
    tags:
      - 'v*.*.*'  # Se activa con tags como v1.0.0

permissions:
  contents: write

jobs:
  build:
    name: 🛠 Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: 📦 Checkout repo
        uses: actions/checkout@v4

      - name: 🧹 Fix Gradle Wrapper permissions
        run: chmod +x ./gradlew

      - name: ☕ Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: 📦 Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: 📥 Install SDK Packages
        run: |
          sdkmanager "build-tools;35.0.0" "platforms;android-34" "platform-tools"
      
      - name: ⚙️ Enable KVM group permissions
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: 🧪 Run Unit Tests
        run: ./gradlew test

      - name: 🧪 Tests (Google Pixel 3a, API 34)
        uses: reactivecircus/android-emulator-runner@62dbb605bba737720e10b196cb4220d374026a6d
        with:
          api-level: 34
          arch: x86_64
          profile: pixel_3a
          heap-size: 512M
          ram-size: 4096M
          emulator-options: -memory 4096 -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          disk-size: 8G
          script: |
            mkdir -p artifacts/report
            adb logcat -c
            adb logcat -G 16M && adb logcat -g
            ./gradlew connectedCheck || touch tests_failing
            adb logcat -d > artifacts/logcat.txt
            cp -r app/build/reports/androidTests/connected/* artifacts/report/ || true
            if adb shell '[ -e /sdcard/Pictures/screenshots ]'; then adb pull /sdcard/Pictures/screenshots artifacts/; fi
            test ! -f tests_failing

      - name: 🏗 Build Release APK
        run: ./gradlew assembleRelease

      - name: 🔍 Locate APK
        id: locate_apk
        run: echo "APK_PATH=$(find app/build/outputs/apk/release -name '*-unsigned.apk' | head -n 1)" >> $GITHUB_OUTPUT

      - name: 🔐 Decode keystore from secret
        run: |
          echo "${{ secrets.SIGNING_KEYSTORE_BASE64 }}" | base64 --decode > gps-keystore.jks

      - name: 🔏 Sign the APK
        run: |
          UNSIGNED_APK="${{ steps.locate_apk.outputs.APK_PATH }}"
          SIGNED_APK=${UNSIGNED_APK/-unsigned/-signed}

          BUILD_TOOLS_PATH=$ANDROID_HOME/build-tools/35.0.0

          "$BUILD_TOOLS_PATH/apksigner" sign \
            --ks gps-keystore.jks \
            --ks-key-alias ${{ secrets.SIGNING_KEY_ALIAS }} \
            --ks-pass pass:${{ secrets.SIGNING_KEYSTORE_PASSWORD }} \
            --key-pass pass:${{ secrets.SIGNING_KEY_PASSWORD }} \
            --out "$SIGNED_APK" \
            "$UNSIGNED_APK"

          echo "SIGNED_APK=$SIGNED_APK" >> $GITHUB_ENV

      - name: 📤 Upload signed APK to GitHub Releases
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ env.SIGNED_APK }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
